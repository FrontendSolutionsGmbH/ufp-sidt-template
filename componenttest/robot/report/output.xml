<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20181028 21:04:52.602" generator="Robot 3.0.4 (Python 2.7.15 on linux2)">
<suite source="/opt/robotframework/tests" id="s1" name="Tests">
<suite source="/opt/robotframework/tests/test" id="s1-s1" name="Test">
<suite source="/opt/robotframework/tests/test/HelloWorld.robot" id="s1-s1-s1" name="HelloWorld">
<test id="s1-s1-s1-t1" name="HelloWorld">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Hello World</arg>
</arguments>
<status status="PASS" endtime="20181028 21:04:52.673" starttime="20181028 21:04:52.672"></status>
</kw>
<tags>
<tag>playground</tag>
</tags>
<status status="PASS" endtime="20181028 21:04:52.674" critical="no" starttime="20181028 21:04:52.671"></status>
</test>
<status status="PASS" endtime="20181028 21:04:52.675" starttime="20181028 21:04:52.666"></status>
</suite>
<suite source="/opt/robotframework/tests/test/TestDebugSetup.robot" id="s1-s1-s2" name="TestDebugSetup">
<test id="s1-s1-s2-t1" name="Test Debug Setup Index">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}</arg>
<arg>Chrome</arg>
</arguments>
<msg timestamp="20181028 21:04:52.909" level="INFO">Opening browser 'Chrome' to base url 'http://development-overview:3000'.</msg>
<status status="PASS" endtime="20181028 21:05:00.100" starttime="20181028 21:04:52.908"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>UFP-SIDT</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:00.151" starttime="20181028 21:05:00.101"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<arguments>
<arg>ScreenshotDebugEntryPoint.png</arg>
</arguments>
<msg timestamp="20181028 21:05:00.738" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ScreenshotDebugEntryPoint.png"&gt;&lt;img src="ScreenshotDebugEntryPoint.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20181028 21:05:00.738" starttime="20181028 21:05:00.152"></status>
</kw>
<doc>testing develop index page</doc>
<tags>
<tag>debug</tag>
<tag>non-critical</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:00.739" critical="no" starttime="20181028 21:04:52.906"></status>
</test>
<test id="s1-s1-s2-t2" name="Test Debug Setup Swagger">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>http://${SERVICE_NAME3}:${SERVICE_PORT3}</arg>
<arg>Chrome</arg>
</arguments>
<msg timestamp="20181028 21:05:00.745" level="INFO">Opening browser 'Chrome' to base url 'http://swagger:8080'.</msg>
<status status="PASS" endtime="20181028 21:05:03.549" starttime="20181028 21:05:00.744"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>swagger</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:03.703" starttime="20181028 21:05:03.550"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>/todos</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:03.758" starttime="20181028 21:05:03.704"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>/todos/{id}</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:03.810" starttime="20181028 21:05:03.758"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>/v1/swagger.json</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:03.864" starttime="20181028 21:05:03.810"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<arguments>
<arg>Swagger.png</arg>
</arguments>
<msg timestamp="20181028 21:05:04.423" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Swagger.png"&gt;&lt;img src="Swagger.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20181028 21:05:04.423" starttime="20181028 21:05:03.865"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" endtime="20181028 21:05:04.464" starttime="20181028 21:05:04.424"></status>
</kw>
<doc>testing swagger gui is reachable</doc>
<tags>
<tag>debug</tag>
<tag>non-critical</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:04.465" critical="no" starttime="20181028 21:05:00.741"></status>
</test>
<test id="s1-s1-s2-t3" name="Test Debug Setup PhpMyAdmin">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>http://${SERVICE_NAME2}:${SERVICE_PORT2}</arg>
<arg>Chrome</arg>
</arguments>
<msg timestamp="20181028 21:05:04.470" level="INFO">Opening browser 'Chrome' to base url 'http://phpmyadmin:80'.</msg>
<status status="PASS" endtime="20181028 21:05:07.349" starttime="20181028 21:05:04.469"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>sidt-todo-app</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:07.487" starttime="20181028 21:05:07.349"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<arguments>
<arg>PhpMyAdmin.png</arg>
</arguments>
<msg timestamp="20181028 21:05:08.137" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="PhpMyAdmin.png"&gt;&lt;img src="PhpMyAdmin.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.137" starttime="20181028 21:05:07.487"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" endtime="20181028 21:05:08.170" starttime="20181028 21:05:08.138"></status>
</kw>
<doc>testing phpmyadmin gui is reachable</doc>
<tags>
<tag>debug</tag>
<tag>non-critical</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:08.170" critical="no" starttime="20181028 21:05:04.467"></status>
</test>
<doc>This test assumes that the infra and debug stack is running.Since this is a SIDT template we believe the debug setup ist part of the provided value hence testing the debug frontend is part of the job</doc>
<status status="PASS" endtime="20181028 21:05:08.173" starttime="20181028 21:04:52.677"></status>
</suite>
<suite source="/opt/robotframework/tests/test/TestServiceBackend.robot" id="s1-s1-s3" name="TestServiceBackend">
<test id="s1-s1-s3-t1" name="Test Service Index Todos Unhappy1">
<kw type="setup" name="Empty Database" library="Database">
<doc>Connect to Kafka Producer</doc>
<kw name="Clear TodoApp" library="Database">
<doc>Clear Todo Database</doc>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>sidt-todo-app</arg>
<arg>${USER}</arg>
<arg>${PASSWORD}</arg>
<arg>todo-mysql</arg>
<arg>${MYSQL_PORT}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.721" level="INFO">Connecting using : pymysql.connect(db=sidt-todo-app, user=root, passwd=root, host=todo-mysql, port=3306, charset=None) </msg>
<status status="PASS" endtime="20181028 21:05:08.725" starttime="20181028 21:05:08.672"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>todos</arg>
</arguments>
<msg timestamp="20181028 21:05:08.726" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM todos; </msg>
<status status="PASS" endtime="20181028 21:05:08.730" starttime="20181028 21:05:08.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Table Cleared</arg>
</arguments>
<msg timestamp="20181028 21:05:08.731" level="INFO">Table Cleared</msg>
<status status="PASS" endtime="20181028 21:05:08.732" starttime="20181028 21:05:08.731"></status>
</kw>
<status status="PASS" endtime="20181028 21:05:08.732" starttime="20181028 21:05:08.671"></status>
</kw>
<status status="PASS" endtime="20181028 21:05:08.733" starttime="20181028 21:05:08.670"></status>
</kw>
<kw name="Rest Post">
<tags>
<tag>backend</tag>
<tag>critical</tag>
<tag>service</tag>
</tags>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}</arg>
<arg>/todos</arg>
<arg>{"todo"</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>temp-name</arg>
<arg>${protocolHostPort}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.736" level="INFO">Creating Session using : alias=temp-name, url=http://ufp-sidt-example-app:3000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181028 21:05:08.737" starttime="20181028 21:05:08.735"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181028 21:05:08.740" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181028 21:05:08.740" starttime="20181028 21:05:08.738"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>temp-name</arg>
<arg>${uri}</arg>
<arg>${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181028 21:05:08.750" level="INFO">Post Request using : alias=temp-name, uri=/todos, data="{\"todo\"", headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181028 21:05:08.751" level="INFO">${result} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.751" starttime="20181028 21:05:08.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response Text ${result.text}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.752" level="INFO">Response Text &lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
&lt;meta charset="utf-8"&gt;
&lt;title&gt;Error&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;pre&gt;SyntaxError: Unexpected token &amp;quot; in JSON at position 0&lt;br&gt; &amp;nbsp; &amp;nbsp;at JSON.parse (&amp;lt;anonymous&amp;gt;)&lt;br&gt; &amp;nbsp; &amp;nbsp;at createStrictSyntaxError (/application/node_modules/body-parser/lib/types/json.js:158:10)&lt;br&gt; &amp;nbsp; &amp;nbsp;at parse (/application/node_modules/body-parser/lib/types/json.js:83:15)&lt;br&gt; &amp;nbsp; &amp;nbsp;at /application/node_modules/body-parser/lib/read.js:121:18&lt;br&gt; &amp;nbsp; &amp;nbsp;at invokeCallback (/application/node_modules/raw-body/index.js:224:16)&lt;br&gt; &amp;nbsp; &amp;nbsp;at done (/application/node_modules/raw-body/index.js:213:7)&lt;br&gt; &amp;nbsp; &amp;nbsp;at IncomingMessage.onEnd (/application/node_modules/raw-body/index.js:273:7)&lt;br&gt; &amp;nbsp; &amp;nbsp;at emitNone (events.js:106:13)&lt;br&gt; &amp;nbsp; &amp;nbsp;at IncomingMessage.emit (events.js:208:7)&lt;br&gt; &amp;nbsp; &amp;nbsp;at endReadableNT (_stream_readable.js:1064:12)&lt;br&gt; &amp;nbsp; &amp;nbsp;at _combinedTickCallback (internal/process/next_tick.js:139:11)&lt;br&gt; &amp;nbsp; &amp;nbsp;at process._tickCallback (internal/process/next_tick.js:181:9)&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;
</msg>
<status status="PASS" endtime="20181028 21:05:08.753" starttime="20181028 21:05:08.751"></status>
</kw>
<msg timestamp="20181028 21:05:08.754" level="INFO">${result} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.754" starttime="20181028 21:05:08.734"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>400</arg>
<arg>${result.status_code}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.755" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.755" starttime="20181028 21:05:08.754"></status>
</kw>
<doc>testing index of todos in browser</doc>
<tags>
<tag>backend</tag>
<tag>service</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:08.756" critical="no" starttime="20181028 21:05:08.667"></status>
</test>
<test id="s1-s1-s3-t2" name="Test Service Index Todos Unhappy2">
<kw type="setup" name="Empty Database" library="Database">
<doc>Connect to Kafka Producer</doc>
<kw name="Clear TodoApp" library="Database">
<doc>Clear Todo Database</doc>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>sidt-todo-app</arg>
<arg>${USER}</arg>
<arg>${PASSWORD}</arg>
<arg>todo-mysql</arg>
<arg>${MYSQL_PORT}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.763" level="INFO">Connecting using : pymysql.connect(db=sidt-todo-app, user=root, passwd=root, host=todo-mysql, port=3306, charset=None) </msg>
<status status="PASS" endtime="20181028 21:05:08.765" starttime="20181028 21:05:08.762"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>todos</arg>
</arguments>
<msg timestamp="20181028 21:05:08.766" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM todos; </msg>
<status status="PASS" endtime="20181028 21:05:08.767" starttime="20181028 21:05:08.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Table Cleared</arg>
</arguments>
<msg timestamp="20181028 21:05:08.768" level="INFO">Table Cleared</msg>
<status status="PASS" endtime="20181028 21:05:08.768" starttime="20181028 21:05:08.768"></status>
</kw>
<status status="PASS" endtime="20181028 21:05:08.769" starttime="20181028 21:05:08.761"></status>
</kw>
<status status="PASS" endtime="20181028 21:05:08.769" starttime="20181028 21:05:08.760"></status>
</kw>
<kw name="Rest Post">
<tags>
<tag>backend</tag>
<tag>critical</tag>
<tag>service</tag>
</tags>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}</arg>
<arg>/todos</arg>
<arg>{"x" :"test"}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>temp-name</arg>
<arg>${protocolHostPort}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.772" level="INFO">Creating Session using : alias=temp-name, url=http://ufp-sidt-example-app:3000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181028 21:05:08.773" starttime="20181028 21:05:08.771"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181028 21:05:08.775" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181028 21:05:08.775" starttime="20181028 21:05:08.774"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>temp-name</arg>
<arg>${uri}</arg>
<arg>${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181028 21:05:08.786" level="INFO">Post Request using : alias=temp-name, uri=/todos, data={"x" :"test"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181028 21:05:08.786" level="INFO">${result} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.786" starttime="20181028 21:05:08.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response Text ${result.text}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.788" level="INFO">Response Text [{"errorType":"MISSING_REQUIRED_PROPERTY","trace":[{"stepName":"ToDo"},{"stepName":"todo"}]},{"errorType":"ADDITIONAL_PROPERTY","trace":[{"stepName":"ToDo"},{"stepName":"x"}]}]</msg>
<status status="PASS" endtime="20181028 21:05:08.788" starttime="20181028 21:05:08.787"></status>
</kw>
<msg timestamp="20181028 21:05:08.789" level="INFO">${result} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.790" starttime="20181028 21:05:08.770"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>400</arg>
<arg>${result.status_code}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.791" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.791" starttime="20181028 21:05:08.790"></status>
</kw>
<doc>testing index of todos in browser</doc>
<tags>
<tag>backend</tag>
<tag>service</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:08.792" critical="no" starttime="20181028 21:05:08.757"></status>
</test>
<test id="s1-s1-s3-t3" name="Test Service Index Todos Happy">
<kw type="setup" name="Empty Database" library="Database">
<doc>Connect to Kafka Producer</doc>
<kw name="Clear TodoApp" library="Database">
<doc>Clear Todo Database</doc>
<kw name="Connect To Database" library="DatabaseLibrary">
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to</doc>
<arguments>
<arg>pymysql</arg>
<arg>sidt-todo-app</arg>
<arg>${USER}</arg>
<arg>${PASSWORD}</arg>
<arg>todo-mysql</arg>
<arg>${MYSQL_PORT}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.799" level="INFO">Connecting using : pymysql.connect(db=sidt-todo-app, user=root, passwd=root, host=todo-mysql, port=3306, charset=None) </msg>
<status status="PASS" endtime="20181028 21:05:08.801" starttime="20181028 21:05:08.797"></status>
</kw>
<kw name="Delete All Rows From Table" library="DatabaseLibrary">
<doc>Delete all the rows within a given table. Set optional input `sansTran` to True to run command without an</doc>
<arguments>
<arg>todos</arg>
</arguments>
<msg timestamp="20181028 21:05:08.802" level="INFO">Executing : Delete All Rows From Table  |  DELETE FROM todos; </msg>
<status status="PASS" endtime="20181028 21:05:08.803" starttime="20181028 21:05:08.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Table Cleared</arg>
</arguments>
<msg timestamp="20181028 21:05:08.804" level="INFO">Table Cleared</msg>
<status status="PASS" endtime="20181028 21:05:08.805" starttime="20181028 21:05:08.804"></status>
</kw>
<status status="PASS" endtime="20181028 21:05:08.805" starttime="20181028 21:05:08.797"></status>
</kw>
<status status="PASS" endtime="20181028 21:05:08.806" starttime="20181028 21:05:08.796"></status>
</kw>
<kw name="Rest Post">
<tags>
<tag>backend</tag>
<tag>critical</tag>
<tag>service</tag>
</tags>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}</arg>
<arg>/todos</arg>
<arg>{"todo":"ola"}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>temp-name</arg>
<arg>${protocolHostPort}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.809" level="INFO">Creating Session using : alias=temp-name, url=http://ufp-sidt-example-app:3000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181028 21:05:08.810" starttime="20181028 21:05:08.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>${headers}</var>
</assign>
<msg timestamp="20181028 21:05:08.812" level="INFO">${headers} = {u'Content-Type': u'application/json'}</msg>
<status status="PASS" endtime="20181028 21:05:08.812" starttime="20181028 21:05:08.811"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the</doc>
<arguments>
<arg>temp-name</arg>
<arg>${uri}</arg>
<arg>${data}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181028 21:05:08.827" level="INFO">Post Request using : alias=temp-name, uri=/todos, data={"todo":"ola"}, headers={u'Content-Type': u'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20181028 21:05:08.827" level="INFO">${result} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.827" starttime="20181028 21:05:08.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response Text ${result.text}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.828" level="INFO">Response Text </msg>
<status status="PASS" endtime="20181028 21:05:08.829" starttime="20181028 21:05:08.827"></status>
</kw>
<msg timestamp="20181028 21:05:08.830" level="INFO">${result} = &lt;Response [204]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.830" starttime="20181028 21:05:08.806"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>204</arg>
<arg>${result.status_code}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.831" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.832" starttime="20181028 21:05:08.830"></status>
</kw>
<kw name="Get Items">
<tags>
<tag>backend</tag>
<tag>critical</tag>
<tag>service</tag>
</tags>
<doc>get all todo items</doc>
<assign>
<var>${result}</var>
</assign>
<kw name="Rest Get">
<tags>
<tag>backend</tag>
<tag>critical</tag>
<tag>service</tag>
</tags>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}</arg>
<arg>/todos</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>temp-name</arg>
<arg>${protocolHostPort}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.835" level="INFO">Creating Session using : alias=temp-name, url=http://ufp-sidt-example-app:3000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181028 21:05:08.836" starttime="20181028 21:05:08.834"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>temp-name</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181028 21:05:08.865" level="INFO">Get Request using : alias=temp-name, uri=/todos, headers=None json=None</msg>
<msg timestamp="20181028 21:05:08.866" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.866" starttime="20181028 21:05:08.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response Text ${result.text}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.868" level="INFO">Response Text [{"id":29,"todo":"ola"}]</msg>
<status status="PASS" endtime="20181028 21:05:08.868" starttime="20181028 21:05:08.867"></status>
</kw>
<msg timestamp="20181028 21:05:08.868" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.869" starttime="20181028 21:05:08.833"></status>
</kw>
<msg timestamp="20181028 21:05:08.869" level="INFO">${result} = &lt;Response [200]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.869" starttime="20181028 21:05:08.832"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>200</arg>
<arg>${result.status_code}</arg>
</arguments>
<msg timestamp="20181028 21:05:08.870" level="INFO">Argument types are:
&lt;type 'unicode'&gt;
&lt;type 'int'&gt;</msg>
<status status="PASS" endtime="20181028 21:05:08.871" starttime="20181028 21:05:08.870"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${result.json()}</arg>
<arg>$.[0].id</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20181028 21:05:09.039" level="INFO">${count} = [29]</msg>
<status status="PASS" endtime="20181028 21:05:09.039" starttime="20181028 21:05:08.871"></status>
</kw>
<kw name="Get Item">
<tags>
<tag>backend</tag>
<tag>critical</tag>
<tag>service</tag>
</tags>
<doc>get a todo item</doc>
<arguments>
<arg>${count[0]}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Rest Get">
<tags>
<tag>backend</tag>
<tag>critical</tag>
<tag>service</tag>
</tags>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}</arg>
<arg>/todos/${itemId}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>temp-name</arg>
<arg>${protocolHostPort}</arg>
</arguments>
<msg timestamp="20181028 21:05:09.044" level="INFO">Creating Session using : alias=temp-name, url=http://ufp-sidt-example-app:3000, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" endtime="20181028 21:05:09.045" starttime="20181028 21:05:09.043"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the</doc>
<arguments>
<arg>temp-name</arg>
<arg>${uri}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20181028 21:05:09.072" level="INFO">Get Request using : alias=temp-name, uri=/todos/29, headers=None json=None</msg>
<msg timestamp="20181028 21:05:09.073" level="INFO">${result} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:09.073" starttime="20181028 21:05:09.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Response Text ${result.text}</arg>
</arguments>
<msg timestamp="20181028 21:05:09.074" level="INFO">Response Text {"id":29,"todo":"ola"}</msg>
<status status="PASS" endtime="20181028 21:05:09.074" starttime="20181028 21:05:09.073"></status>
</kw>
<msg timestamp="20181028 21:05:09.075" level="INFO">${result} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:09.075" starttime="20181028 21:05:09.041"></status>
</kw>
<msg timestamp="20181028 21:05:09.076" level="INFO">${result} = &lt;Response [400]&gt;</msg>
<status status="PASS" endtime="20181028 21:05:09.076" starttime="20181028 21:05:09.039"></status>
</kw>
<kw name="Get Value From Json" library="JSONLibrary">
<doc>Get Value From JSON using JSONPath</doc>
<arguments>
<arg>${result.json()}</arg>
<arg>$.todo</arg>
</arguments>
<assign>
<var>${text}</var>
</assign>
<msg timestamp="20181028 21:05:09.210" level="INFO">${text} = [u'ola']</msg>
<status status="PASS" endtime="20181028 21:05:09.210" starttime="20181028 21:05:09.076"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>ola</arg>
<arg>${text[0]}</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:09.211" starttime="20181028 21:05:09.210"></status>
</kw>
<doc>testing index of todos in browser</doc>
<tags>
<tag>backend</tag>
<tag>service</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:09.212" critical="no" starttime="20181028 21:05:08.793"></status>
</test>
<doc>This test assumes that the infra and debug stack is running.Since this is a SIDT template we believe the debug setup ist part of the provided value hence testing the debug frontend is part of the job</doc>
<status status="PASS" endtime="20181028 21:05:09.214" starttime="20181028 21:05:08.183"></status>
</suite>
<suite source="/opt/robotframework/tests/test/TestServiceFrontend.robot" id="s1-s1-s4" name="TestServiceFrontend">
<test id="s1-s1-s4-t1" name="Test Service Index Todos">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}/todos</arg>
<arg>Chrome</arg>
</arguments>
<msg timestamp="20181028 21:05:09.233" level="INFO">Opening browser 'Chrome' to base url 'http://ufp-sidt-example-app:3000/todos'.</msg>
<status status="PASS" endtime="20181028 21:05:11.096" starttime="20181028 21:05:09.233"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on current page.</doc>
<arguments>
<arg>[</arg>
</arguments>
<status status="PASS" endtime="20181028 21:05:11.146" starttime="20181028 21:05:11.097"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<arguments>
<arg>ServiceTodos.png</arg>
</arguments>
<msg timestamp="20181028 21:05:11.744" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ServiceTodos.png"&gt;&lt;img src="ServiceTodos.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20181028 21:05:11.745" starttime="20181028 21:05:11.146"></status>
</kw>
<doc>testing index of todos in browser</doc>
<tags>
<tag>frontend</tag>
<tag>service</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:11.745" critical="no" starttime="20181028 21:05:09.230"></status>
</test>
<test id="s1-s1-s4-t2" name="Test Service Index Todos Entry">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>http://${SERVICE_NAME1}:${SERVICE_PORT1}/todos/1</arg>
<arg>Chrome</arg>
</arguments>
<msg timestamp="20181028 21:05:11.752" level="INFO">Opening browser 'Chrome' to base url 'http://ufp-sidt-example-app:3000/todos/1'.</msg>
<status status="PASS" endtime="20181028 21:05:13.719" starttime="20181028 21:05:11.751"></status>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<doc>Takes screenshot of the current page and embeds it into log file.</doc>
<arguments>
<arg>ServiceTodos.png</arg>
</arguments>
<msg timestamp="20181028 21:05:14.235" html="yes" level="INFO">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="ServiceTodos.png"&gt;&lt;img src="ServiceTodos.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" endtime="20181028 21:05:14.235" starttime="20181028 21:05:13.720"></status>
</kw>
<doc>testing index of todos in browser</doc>
<tags>
<tag>frontend</tag>
<tag>service</tag>
</tags>
<status status="PASS" endtime="20181028 21:05:14.236" critical="no" starttime="20181028 21:05:11.748"></status>
</test>
<doc>This test assumes that the infra and debug stack is running.Since this is a SIDT template we believe the debug setup ist part of the provided value hence testing the debug frontend is part of the job</doc>
<status status="PASS" endtime="20181028 21:05:14.238" starttime="20181028 21:05:09.220"></status>
</suite>
<status status="PASS" endtime="20181028 21:05:14.249" starttime="20181028 21:04:52.662"></status>
</suite>
<status status="PASS" endtime="20181028 21:05:14.261" starttime="20181028 21:04:52.607"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="0">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
<stat info="critical" fail="0" pass="0">critical</stat>
<stat info="non-critical" fail="0" pass="0">noncritical</stat>
<stat fail="0" pass="3">backend</stat>
<stat fail="0" pass="3">debug</stat>
<stat fail="0" pass="2">frontend</stat>
<stat fail="0" pass="3">non-critical</stat>
<stat fail="0" pass="1">playground</stat>
<stat fail="0" pass="5">service</stat>
</tag>
<suite>
<stat fail="0" id="s1" name="Tests" pass="9">Tests</stat>
<stat fail="0" id="s1-s1" name="Test" pass="9">Tests.Test</stat>
<stat fail="0" id="s1-s1-s1" name="HelloWorld" pass="1">Tests.Test.HelloWorld</stat>
<stat fail="0" id="s1-s1-s2" name="TestDebugSetup" pass="3">Tests.Test.TestDebugSetup</stat>
<stat fail="0" id="s1-s1-s3" name="TestServiceBackend" pass="3">Tests.Test.TestServiceBackend</stat>
<stat fail="0" id="s1-s1-s4" name="TestServiceFrontend" pass="2">Tests.Test.TestServiceFrontend</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
