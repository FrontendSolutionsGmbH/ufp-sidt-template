version: '2'

services:

  ##############################################
  # The Development Overview Container
  #
  # it uses the ckleinhuis/ufp-env-handlebars image to transform environment variables into a json
  # that is feed to a handlebars renderer and is configured by default to render and host a html menu
  #
  #
  development-overview:
    image: ckleinhuis/ufp-env-handlebars:latest
    environment:
    - CFG_BRAND_LABEL=Dev UFP-SIDT-Template

    - CFG_MENU_0_LABEL=PhpMyAdmin
    - CFG_MENU_0_LINK=http://localhost:8082/

    - CFG_MENU_1_LABEL=Swagger GUI
    - CFG_MENU_1_LINK=http://localhost:8084

    - CFG_MENU_2_LABEL=Test Report
    - CFG_MENU_2_LINK=http://localhost:8083/report.html

    - CFG_WELCOME_ENTRIES_0_TEXTS_0_TITLE=Ufp SIDT Template Debug Entrypoint
    - CFG_WELCOME_ENTRIES_0_TEXTS_0_COLOR=secondary
    - CFG_WELCOME_ENTRIES_0_TEXTS_0_TEXT=This debug page is made extra for you developing your app, <p>SIDT Template Example App consists of a NodeJs Backend and a MySQL Database<p>

    - CFG_WELCOME_ENTRIES_1_TEXTS_0_TITLE=S - Service Stack
    - CFG_WELCOME_ENTRIES_1_TEXTS_0_COLOR=secondary
    - CFG_WELCOME_ENTRIES_1_TEXTS_0_TEXT=The Service stack, the NodeJS Todo App

    - CFG_WELCOME_ENTRIES_1_BUTTONS_2_LABEL=UFP SIDT Template Todo App Swagger Gui
    - CFG_WELCOME_ENTRIES_1_BUTTONS_2_LINK=http://localhost:8084
    - CFG_WELCOME_ENTRIES_1_BUTTONS_2_DESCRIPTION=The todo app REST Backend It is started using `./stack.sh -u service

    - CFG_WELCOME_ENTRIES_2_TEXTS_0_TITLE=I - Infrastructure Stack
    - CFG_WELCOME_ENTRIES_2_TEXTS_0_COLOR=secondary
    - CFG_WELCOME_ENTRIES_2_TEXTS_0_TEXT=The Infrastructure stack, in this case a single MySQL database, start using `./stack.sh -u infra

    - CFG_WELCOME_ENTRIES_2_BUTTONS_1_LABEL=PhpMyAdmin Todo Database
    - CFG_WELCOME_ENTRIES_2_BUTTONS_1_LINK=http://localhost:8082
    - CFG_WELCOME_ENTRIES_2_BUTTONS_1_COLOR=secondary
    - CFG_WELCOME_ENTRIES_2_BUTTONS_1_DESCRIPTION=Started with debug stack use `./stack.sh -u debug

    - CFG_WELCOME_ENTRIES_3_TEXTS_0_TITLE=D - Debug Stack
    - CFG_WELCOME_ENTRIES_3_TEXTS_0_COLOR=secondary
    - CFG_WELCOME_ENTRIES_3_TEXTS_0_TEXT=The Debug stack, provides all of the clients linked on this page


    - CFG_WELCOME_ENTRIES_4_TEXTS_0_TITLE=T - Test Stack
    - CFG_WELCOME_ENTRIES_4_TEXTS_0_COLOR=secondary
    - CFG_WELCOME_ENTRIES_4_TEXTS_0_TEXT=The test stack consists of functional tests, this template prefers to use RobotFramework test runner, which includes generating a nice report.

    - CFG_WELCOME_ENTRIES_4_BUTTONS_0_LABEL=Test Report
    - CFG_WELCOME_ENTRIES_4_BUTTONS_0_LINK=http://localhost:8083/report.html
    - CFG_WELCOME_ENTRIES_4_BUTTONS_0_COLOR=success
    - CFG_WELCOME_ENTRIES_4_BUTTONS_0_DESCRIPTION=Use  './sidt.sh -u test -c' for creating new report, and restart debug stack using './sidt.sh -u test -c'

    ports:
    - "8080:3000"

  ##############################################
  # The PhpMyAdmin
  #
  # used to browse the database and is configured to connect to infra database
  #
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    ports:
    - "8082:80"
    volumes:
    - ./phpmyadmin/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php

  ##############################################
  # The Test Report is hosted using a nginx
  #
  # making it possible to view the test run report under localhost:8083
  #
  web:
    image: nginx
    volumes:
    - ./robot/report:/usr/share/nginx/html
    ports:
    - "8083:80"


  ##############################################
  # Provide a swagger-ui showing the defined swagger api of service
  #
  swagger:
    image: swaggerapi/swagger-ui
    environment:
    - API_URL=http://ufp-sidt-example-app:3000/v1/swagger.json
    ports:
    - "8084:8080"

  ##############################################
  # Provide a swagger-ui showing the defined swagger api of service
  #
  swagger2:
    build: SwaggerUi
    environment:
    - API_URL=http://localhost:8085/forward?http://ufp-sidt-example-app:3000/v1/swagger.json
    ports:
    - "8085:8080"
